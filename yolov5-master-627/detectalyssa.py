# -*- coding: utf-8 -*-
"""detectAlyssa.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fmHrYZNOMZG22cbHHvcgj7qPmzfak9f-
"""

import os
import cv2
import torch
from PIL import Image
import numpy as np

def detect_and_save_results(model, image_path, save_img_path, save_txt_path):
    img = Image.open(image_path)

    results = model(img)

    detections = results.pandas().xyxy[0]

    if not os.path.exists(os.path.dirname(save_img_path)):
        os.makedirs(os.path.dirname(save_img_path))
    
    results.save()

    with open(save_txt_path, 'w') as f:
        for index, row in detections.iterrows():
            class_id = row['name']
            x_center = (row['xmin'] + row['xmax']) / 2.0
            y_center = (row['ymin'] + row['ymax']) / 2.0
            width = row['xmax'] - row['xmin']
            height = row['ymax'] - row['ymin']
            f.write(f"{class_id} {x_center} {y_center} {width} {height}\n")

    counts = detections['name'].value_counts()
    for tube_type in ['tip-p20-1', 'tip-p20-2', 'tip-p300-1', 'tip-p300-2']:
        print(f'tip: {tube_type}, value: {counts.get(tube_type, 0)}')
    for liquid_type in ['blue liquid', 'red liquid', 'transparent liquid']:
        print(f'tip: {liquid_type}, value: {counts.get(liquid_type, 0)}')